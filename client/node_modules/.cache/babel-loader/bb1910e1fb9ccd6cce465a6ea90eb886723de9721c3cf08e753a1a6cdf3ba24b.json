{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  cart: [],\n  quantity: 0\n};\nconst CartSystem = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    AddCart: (state, action) => {\n      // const find = state.carts.findindex(item => item.id === action.payload.id)\n      // if (find >= 0) {\n      // state.cart[find].quantity += 1\n      // } else {\n      // const tempvar = { ...action.payload, quantity: 1 }\n      // state.carts.push(tempvar)\n\n      state.cart.push(action.payload);\n    }\n  }\n});\nexport const {\n  AddCart\n} = CartSystem.actions;\nexport default CartSystem.reducer;","map":{"version":3,"names":["createSlice","initialState","cart","quantity","CartSystem","name","reducers","AddCart","state","action","push","payload","actions","reducer"],"sources":["D:/Book-Store/client/src/pages/redux/cartSystem.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nconst initialState = {\r\n    cart: [],\r\n    quantity: 0\r\n}\r\n\r\nconst CartSystem = createSlice({\r\n    name: \"user\",\r\n    initialState,\r\n    reducers: {\r\n        AddCart: (state, action) => {\r\n            // const find = state.carts.findindex(item => item.id === action.payload.id)\r\n            // if (find >= 0) {\r\n            // state.cart[find].quantity += 1\r\n            // } else {\r\n            // const tempvar = { ...action.payload, quantity: 1 }\r\n            // state.carts.push(tempvar)\r\n\r\n            state.cart.push(action.payload)\r\n        }\r\n    }\r\n}\r\n)\r\n\r\nexport const { AddCart } = CartSystem.actions;\r\nexport default CartSystem.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,MAAMC,YAAY,GAAG;EACjBC,IAAI,EAAE,EAAE;EACRC,QAAQ,EAAE;AACd,CAAC;AAED,MAAMC,UAAU,GAAGJ,WAAW,CAAC;EAC3BK,IAAI,EAAE,MAAM;EACZJ,YAAY;EACZK,QAAQ,EAAE;IACNC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACxB;MACA;MACA;MACA;MACA;MACA;;MAEAD,KAAK,CAACN,IAAI,CAACQ,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IACnC;EACJ;AACJ,CACA,CAAC;AAED,OAAO,MAAM;EAAEJ;AAAQ,CAAC,GAAGH,UAAU,CAACQ,OAAO;AAC7C,eAAeR,UAAU,CAACS,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}