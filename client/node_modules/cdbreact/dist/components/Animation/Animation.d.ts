import React, { CSSProperties } from "react";
import PropTypes from "prop-types";
interface Props {
    className?: string;
    count?: number;
    delay?: string;
    duration?: string | number;
    infinite?: boolean;
    onAnimationEnd?: Function;
    onAnimationIteration?: Function;
    onAnimationStart?: Function;
    reveal?: boolean;
    style?: CSSProperties | any;
    tag?: Function | string;
    type?: string;
    elemRef?: Function;
    countIterations?: any;
    children?: React.ReactNode;
    clientHeight?: number;
    currentRef?: any;
}
declare const Animation: {
    (props: Props): JSX.Element;
    propTypes: {
        children: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        className: PropTypes.Requireable<string>;
        count: PropTypes.Requireable<number>;
        delay: PropTypes.Requireable<string>;
        duration: PropTypes.Requireable<string | number>;
        infinite: PropTypes.Requireable<boolean>;
        onAnimationEnd: PropTypes.Requireable<(...args: any[]) => any>;
        onAnimationIteration: PropTypes.Requireable<(...args: any[]) => any>;
        onAnimationStart: PropTypes.Requireable<(...args: any[]) => any>;
        reveal: PropTypes.Requireable<boolean>;
        style: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        tag: PropTypes.Requireable<string | ((...args: any[]) => any)>;
        type: PropTypes.Requireable<string>;
        countIterations: PropTypes.Requireable<number>;
    };
    defaultProps: {
        tag: string;
        reveal: boolean;
        duration: number;
        count: number;
    };
};
export default Animation;
export { Animation as CDBAnimation };
