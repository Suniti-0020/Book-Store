import React from 'react';
import PropTypes from 'prop-types';
interface Props {
    action?: boolean;
    active?: boolean;
    block?: boolean;
    children?: React.ReactNode;
    circle?: boolean;
    className?: string;
    color?: string;
    disabled?: boolean;
    download?: string;
    flat?: boolean;
    innerRef?: React.MutableRefObject<HTMLDivElement | undefined>;
    onClick?: Function;
    role?: string;
    size?: string;
    social?: string;
    tag?: string;
    target?: string;
    type?: string;
    gradient?: boolean | string | any;
    outline?: boolean;
    rounded?: boolean | any;
    href?: string;
    style?: React.CSSProperties;
}
declare const Button: {
    (props: Props): JSX.Element;
    defaultProps: {
        color: string;
        tag: string;
        size: string;
        circle: boolean;
        innerRef: any;
    };
    propTypes: {
        action: PropTypes.Requireable<boolean>;
        active: PropTypes.Requireable<boolean>;
        block: PropTypes.Requireable<boolean>;
        children: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        circle: PropTypes.Requireable<boolean>;
        className: PropTypes.Requireable<string>;
        color: PropTypes.Requireable<string>;
        disabled: PropTypes.Requireable<boolean>;
        download: PropTypes.Requireable<string>;
        flat: PropTypes.Requireable<boolean>;
        innerRef: PropTypes.Requireable<any>;
        onClick: PropTypes.Requireable<(...args: any[]) => any>;
        role: PropTypes.Requireable<string>;
        size: PropTypes.Requireable<string>;
        social: PropTypes.Requireable<string>;
        tag: PropTypes.Requireable<string>;
        target: PropTypes.Requireable<string>;
        type: PropTypes.Requireable<string>;
        outline: PropTypes.Requireable<boolean>;
    };
};
export default Button;
export { Button as CDBBtn };
