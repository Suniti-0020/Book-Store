import React from 'react';
import PropTypes from 'prop-types';
interface Props {
    length?: number;
    activeItem?: number;
    children?: React.ReactNode;
    className?: string;
    interval?: [number, boolean];
    mobileGesture?: boolean;
    multiItem?: boolean;
    onHoverStop?: boolean;
    showControls?: boolean;
    showIndicators?: boolean;
    slide?: boolean;
    tag?: string;
    testimonial?: boolean;
    thumbnails?: boolean;
}
export declare type CarouselContextType = {
    activeItem: any;
    length: any;
    slide: any;
};
export declare const CarouselContext: React.Context<CarouselContextType>;
declare const Carousel: {
    (props: Props): JSX.Element;
    propTypes: {
        activeItem: PropTypes.Requireable<number>;
        children: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        className: PropTypes.Requireable<string>;
        interval: PropTypes.Requireable<number | boolean>;
        length: PropTypes.Requireable<number>;
        mobileGesture: PropTypes.Requireable<boolean>;
        multiItem: PropTypes.Requireable<boolean>;
        onHoverStop: PropTypes.Requireable<boolean>;
        showControls: PropTypes.Requireable<boolean>;
        showIndicators: PropTypes.Requireable<boolean>;
        slide: PropTypes.Requireable<boolean>;
        tag: PropTypes.Requireable<string | ((...args: any[]) => any)>;
        testimonial: PropTypes.Requireable<boolean>;
        thumbnails: PropTypes.Requireable<boolean>;
    };
    defaultProps: {
        interval: number;
        mobileGesture: boolean;
        onHoverStop: boolean;
        showControls: boolean;
        showIndicators: boolean;
        tag: string;
    };
};
export default Carousel;
export { Carousel as CDBCarousel };
