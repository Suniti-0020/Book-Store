import React from 'react';
import PropTypes from 'prop-types';
interface Props {
    children?: React.ReactNode;
    className?: string;
    delay?: {
        show: number;
        hide: number;
    };
    id?: string;
    isOpen?: string | boolean;
    navbar?: boolean;
    onClosed?: Function;
    onOpened?: Function;
    style?: any;
}
declare const Collapse: {
    (props: Props): JSX.Element;
    propTypes: {
        children: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        className: PropTypes.Requireable<string>;
        delay: PropTypes.Requireable<number | PropTypes.InferProps<{
            hide: PropTypes.Requireable<number>;
            show: PropTypes.Requireable<number>;
        }>>;
        id: PropTypes.Requireable<string>;
        isOpen: PropTypes.Requireable<string | boolean>;
        navbar: PropTypes.Requireable<boolean>;
        onClosed: PropTypes.Requireable<(...args: any[]) => any>;
        onOpened: PropTypes.Requireable<(...args: any[]) => any>;
    };
    defaultProps: {
        isOpen: string;
        delay: {
            show: number;
            hide: number;
        };
        onOpened: () => void;
        onClosed: () => void;
    };
};
export default Collapse;
export { Collapse as CDBCollapse };
