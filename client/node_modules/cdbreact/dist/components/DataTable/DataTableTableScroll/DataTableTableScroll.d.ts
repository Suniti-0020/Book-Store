import React from 'react';
import PropTypes from 'prop-types';
interface Props {
    autoWidth: boolean;
    bordered: boolean;
    borderless: boolean;
    btn: boolean;
    dark: boolean;
    fixed: boolean;
    handleSort: Function;
    handleTableBodyScroll: any;
    hover: boolean;
    responsive: boolean;
    responsiveLg: boolean;
    responsiveMd: boolean;
    responsiveSm: boolean;
    responsiveXl: boolean;
    small: boolean;
    sortable: boolean;
    sorted: boolean;
    striped: boolean;
    tbodyColor: string;
    tbodyTextWhite: boolean;
    theadColor: string;
    theadTextWhite: boolean;
    translateScrollHead: number;
    children?: React.ReactNode;
    columns?: any;
    maxHeight?: string;
    rows?: any;
    scrollX?: boolean;
    scrollY?: boolean;
}
declare const DataTableTableScroll: {
    (props: Props): JSX.Element;
    propTypes: {
        autoWidth: PropTypes.Validator<boolean>;
        bordered: PropTypes.Validator<boolean>;
        borderless: PropTypes.Validator<boolean>;
        btn: PropTypes.Validator<boolean>;
        dark: PropTypes.Validator<boolean>;
        fixed: PropTypes.Validator<boolean>;
        handleSort: PropTypes.Validator<(...args: any[]) => any>;
        handleTableBodyScroll: PropTypes.Validator<(...args: any[]) => any>;
        hover: PropTypes.Validator<boolean>;
        responsive: PropTypes.Validator<boolean>;
        responsiveLg: PropTypes.Validator<boolean>;
        responsiveMd: PropTypes.Validator<boolean>;
        responsiveSm: PropTypes.Validator<boolean>;
        responsiveXl: PropTypes.Validator<boolean>;
        small: PropTypes.Validator<boolean>;
        sortable: PropTypes.Validator<boolean>;
        sorted: PropTypes.Validator<boolean>;
        striped: PropTypes.Validator<boolean>;
        tbodyColor: PropTypes.Validator<string>;
        tbodyTextWhite: PropTypes.Validator<boolean>;
        theadColor: PropTypes.Validator<string>;
        theadTextWhite: PropTypes.Validator<boolean>;
        translateScrollHead: PropTypes.Validator<number>;
        children: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        columns: PropTypes.Requireable<object[]>;
        maxHeight: PropTypes.Requireable<string>;
        rows: PropTypes.Requireable<object[]>;
        scrollX: PropTypes.Requireable<boolean>;
        scrollY: PropTypes.Requireable<boolean>;
    };
    defaultProps: {
        children: string;
    };
};
export default DataTableTableScroll;
export { DataTableTableScroll as MDBDataTableTableScroll };
