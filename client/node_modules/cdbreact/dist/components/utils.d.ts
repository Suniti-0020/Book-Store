export declare function getTetherAttachments(placement: string): {};
export declare const tetherAttachements: string[];
export declare function getScrollbarWidth(): number;
export declare function setScrollbarWidth(padding: number | string): void;
export declare function isBodyOverflowing(): boolean;
export declare function getOriginalBodyPadding(): number;
export declare function conditionallyUpdateScrollbar(): void;
export declare function mapToCssModules(className: string, cssModule: any): string;
export declare function omit<T>(obj: any, omitKeys: any[]): T;
export declare const keyCodes: {
    esc: number;
    space: number;
    tab: number;
    up: number;
    down: number;
};
export declare const returnAttributes: (attributes: any) => any;
export declare const getColorClass: (color: string) => string;
export declare function debounce(fn: any, time?: number): {
    (this: any, ...args: any): void;
    clear(): void;
};
export declare const makeFirstLetterUpper: (element: string) => string;
export declare const makeRandomID: (id?: string) => string;
export declare const takeThemeColor: (theme: any) => any;
export declare const takeThemeColorOpacity: (theme: any) => any;
export declare const testData: {
    columns: ({
        label: string;
        field: string;
        width: number;
        attributes: {
            "aria-controls": string;
            "aria-label": string;
        };
        sort?: undefined;
    } | {
        label: string;
        field: string;
        width: number;
        attributes?: undefined;
        sort?: undefined;
    } | {
        label: string;
        field: string;
        sort: string;
        width: number;
        attributes?: undefined;
    })[];
    rows: {
        name: string;
        position: string;
        office: string;
        age: string;
        date: string;
        salary: string;
    }[];
};
